{
    "id": "row_000003",
    "result": {
        "answer": {
            "title": "System for Learning TurKontrol’s POMDP Parameters from Mechanical Turk Data",
            "introduction": "The system in question addresses the challenge of quality control in crowdsourcing platforms like Amazon Mechanical Turk by learning and applying TurKontrol’s POMDP parameters to optimize iterative, crowd-sourced workflows. TurKontrol is a theoretical model based on Partially Observable Markov Decision Processes (POMDPs) designed for this purpose.",
            "main_body": "The approach taken by this system is an end-to-end process. It first learns the POMDP parameters of TurKontrol from real data collected from Mechanical Turk. Following this learning phase, the system applies the learned model to dynamically optimize live tasks. A key aspect of its methodology involves modeling worker accuracy and voting patterns to control a successive-improvement process on Mechanical Turk.",
            "conclusion": "The results demonstrate that by modeling worker accuracy and voting patterns, the system produces significantly superior artifacts. These artifacts are of higher quality compared to those generated through nonadaptive workflows, while utilizing the same amount of money, indicating an effective and efficient optimization of crowdsourced tasks."
        }
    },
    "prompt": "You will be given a JSON object as a string which contains a series of related search queries and their retrieved documents ('hits'). Do not make answer from external knowledge. You must make answer inside of Context.\nYour main task is to answer the specific 'Question' provided below. Use the entire JSON data as context to formulate your answer, paying close attention to the 'text' fields within the 'hits' lists.\n\nThe JSON data has a list of queries. The 'original' query is the one you need to answer. The other queries are supplementary and provide additional context.\nDo not use \"*\", \"-\" symbols. Please don't use \"**\" to emphasize words. Don't answer in markdown format just write it simple.\n\nIf the 'Question' is in Korean, format your answer in Korean as follows:\n##제목##\n\n##서론##\n\n##본론##\n\n##결론##\n\nIf the 'Question' is in English, format your answer in English as follows, If English then Just write title inside of ##{Title}##:\n##{Title}##\n\n##Introduction##\n\n##Main Body##\n\n##Conclusion##\n\n--- Context ---\n{\n  \"id\": \"row_000003\",\n  \"model_name\": \"Alibaba-NLP/gte-multilingual-base\",\n  \"timestamp_kst\": \"2025-09-08T23:55:32.434746+09:00\",\n  \"trial_id\": \"a57c73f2\",\n  \"queries\": [\n    {\n      \"query\": \"What approach and results characterize the system that learns TurKontrol’s POMDP parameters from Mechanical Turk data to optimize iterative crowdsourced tasks?\",\n      \"query_meta\": {\n        \"type\": \"original\"\n      },\n      \"top_k\": 50,\n      \"hits\": [\n        {\n          \"rank\": 1,\n          \"score\": 0.8459355235099792,\n          \"doc_id\": \"NART120023140\",\n          \"title\": \"Artificial Intelligence for Artificial Artificial Intelligence\",\n          \"abstract\": \"<P> Crowdsourcing platforms such as Amazon Mechanical Turk have become popular for a wide variety of human intelligence tasks; however, quality control continues to be a significant challenge. Recently, we propose TurKontrol, a theoretical model based on POMDPs to optimize iterative, crowd-sourced workflows. However, they neither describe how to learn the model parameters, nor show its effectiveness in a real crowd-sourced setting. Learning is challenging due to the scale of the model and noisy data: there are hundreds of thousands of workers with high-variance abilities. This paper presents an end-to-end system that first learns TurKontrol's POMDP parameters from real Mechanical Turk data, and then applies the model to dynamically optimize live tasks. We validate the model and use it to control a successive-improvement process on Mechanical Turk. By modeling worker accuracy and voting patterns, our system produces significantly superior artifacts compared to those generated through nonadaptive workflows using the same amount of money. </P>\",\n          \"source\": \"http://click.ndsl.kr/servlet/OpenAPIDetailView?keyValue=NART120023140&target=NART&cn=NART120023140\",\n          \"author\": \"nan\",\n          \"embedding_mode\": \"3*title+abstract\",\n          \"embedding_text\": \"Artificial Intelligence for Artificial Artificial Intelligence Artificial Intelligence for Artificial Artificial Intelligence Artificial Intelligence for Artificial Artificial Intelligence <P> Crowdsourcing platforms such as Amazon Mechanical Turk have become popular for a wide variety of human intelligence tasks; however, quality control continues to be a significant challenge. Recently, we propose TurKontrol, a theoretical model based on POMDPs to optimize iterative, crowd-sourced workflows. However, they neither describe how to learn the model parameters, nor show its effectiveness in a real crowd-sourced setting. Learning is challenging due to the scale of the model and noisy data: there are hundreds of thousands of workers with high-variance abilities. This paper presents an end-to-end system that first learns TurKontrol's POMDP parameters from real Mechanical Turk data, and then applies the model to dynamically optimize live tasks. We validate the model and use it to control a successive-improvement process on Mechanical Turk. By modeling worker accuracy and voting patterns, our system produces significantly superior artifacts compared to those generated through nonadaptive workflows using the same amount of money. </P>\"\n        }\n      ]\n    },\n    {\n      \"query\": \"What approach does the system use to learn TurKontrol’s POMDP parameters from Mechanical Turk data to optimize iterative crowdsourced tasks?\",\n      \"query_meta\": {\n        \"type\": \"single_hop\",\n        \"index\": 0\n      },\n      \"top_k\": 50,\n      \"hits\": [\n        {\n          \"rank\": 1,\n          \"score\": 0.8365156650543213,\n          \"doc_id\": \"NART120023140\",\n          \"title\": \"Artificial Intelligence for Artificial Artificial Intelligence\",\n          \"abstract\": \"<P> Crowdsourcing platforms such as Amazon Mechanical Turk have become popular for a wide variety of human intelligence tasks; however, quality control continues to be a significant challenge. Recently, we propose TurKontrol, a theoretical model based on POMDPs to optimize iterative, crowd-sourced workflows. However, they neither describe how to learn the model parameters, nor show its effectiveness in a real crowd-sourced setting. Learning is challenging due to the scale of the model and noisy data: there are hundreds of thousands of workers with high-variance abilities. This paper presents an end-to-end system that first learns TurKontrol's POMDP parameters from real Mechanical Turk data, and then applies the model to dynamically optimize live tasks. We validate the model and use it to control a successive-improvement process on Mechanical Turk. By modeling worker accuracy and voting patterns, our system produces significantly superior artifacts compared to those generated through nonadaptive workflows using the same amount of money. </P>\",\n          \"source\": \"http://click.ndsl.kr/servlet/OpenAPIDetailView?keyValue=NART120023140&target=NART&cn=NART120023140\",\n          \"author\": \"nan\",\n          \"embedding_mode\": \"3*title+abstract\",\n          \"embedding_text\": \"Artificial Intelligence for Artificial Artificial Intelligence Artificial Intelligence for Artificial Artificial Intelligence Artificial Intelligence for Artificial Artificial Intelligence <P> Crowdsourcing platforms such as Amazon Mechanical Turk have become popular for a wide variety of human intelligence tasks; however, quality control continues to be a significant challenge. Recently, we propose TurKontrol, a theoretical model based on POMDPs to optimize iterative, crowd-sourced workflows. However, they neither describe how to learn the model parameters, nor show its effectiveness in a real crowd-sourced setting. Learning is challenging due to the scale of the model and noisy data: there are hundreds of thousands of workers with high-variance abilities. This paper presents an end-to-end system that first learns TurKontrol's POMDP parameters from real Mechanical Turk data, and then applies the model to dynamically optimize live tasks. We validate the model and use it to control a successive-improvement process on Mechanical Turk. By modeling worker accuracy and voting patterns, our system produces significantly superior artifacts compared to those generated through nonadaptive workflows using the same amount of money. </P>\"\n        }\n      ]\n    },\n    {\n      \"query\": \"What results characterize the system that learns TurKontrol’s POMDP parameters from Mechanical Turk data to optimize iterative crowdsourced tasks?\",\n      \"query_meta\": {\n        \"type\": \"single_hop\",\n        \"index\": 1\n      },\n      \"top_k\": 50,\n      \"hits\": [\n        {\n          \"rank\": 1,\n          \"score\": 0.8467158079147339,\n          \"doc_id\": \"NART120023140\",\n          \"title\": \"Artificial Intelligence for Artificial Artificial Intelligence\",\n          \"abstract\": \"<P> Crowdsourcing platforms such as Amazon Mechanical Turk have become popular for a wide variety of human intelligence tasks; however, quality control continues to be a significant challenge. Recently, we propose TurKontrol, a theoretical model based on POMDPs to optimize iterative, crowd-sourced workflows. However, they neither describe how to learn the model parameters, nor show its effectiveness in a real crowd-sourced setting. Learning is challenging due to the scale of the model and noisy data: there are hundreds of thousands of workers with high-variance abilities. This paper presents an end-to-end system that first learns TurKontrol's POMDP parameters from real Mechanical Turk data, and then applies the model to dynamically optimize live tasks. We validate the model and use it to control a successive-improvement process on Mechanical Turk. By modeling worker accuracy and voting patterns, our system produces significantly superior artifacts compared to those generated through nonadaptive workflows using the same amount of money. </P>\",\n          \"source\": \"http://click.ndsl.kr/servlet/OpenAPIDetailView?keyValue=NART120023140&target=NART&cn=NART120023140\",\n          \"author\": \"nan\",\n          \"embedding_mode\": \"3*title+abstract\",\n          \"embedding_text\": \"Artificial Intelligence for Artificial Artificial Intelligence Artificial Intelligence for Artificial Artificial Intelligence Artificial Intelligence for Artificial Artificial Intelligence <P> Crowdsourcing platforms such as Amazon Mechanical Turk have become popular for a wide variety of human intelligence tasks; however, quality control continues to be a significant challenge. Recently, we propose TurKontrol, a theoretical model based on POMDPs to optimize iterative, crowd-sourced workflows. However, they neither describe how to learn the model parameters, nor show its effectiveness in a real crowd-sourced setting. Learning is challenging due to the scale of the model and noisy data: there are hundreds of thousands of workers with high-variance abilities. This paper presents an end-to-end system that first learns TurKontrol's POMDP parameters from real Mechanical Turk data, and then applies the model to dynamically optimize live tasks. We validate the model and use it to control a successive-improvement process on Mechanical Turk. By modeling worker accuracy and voting patterns, our system produces significantly superior artifacts compared to those generated through nonadaptive workflows using the same amount of money. </P>\"\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"model\": \"gemini-2.5-flash\",\n    \"temperature\": 0.2\n  }\n}\n\n--- Question ---\nWhat approach and results characterize the system that learns TurKontrol’s POMDP parameters from Mechanical Turk data to optimize iterative crowdsourced tasks?\n\n",
    "model": "models/gemini-2.5-flash",
    "retrival": {
        "id": "row_000003",
        "model_name": "Alibaba-NLP/gte-multilingual-base",
        "timestamp_kst": "2025-09-08T23:55:32.434746+09:00",
        "trial_id": "a57c73f2",
        "queries": [
            {
                "query": "What approach and results characterize the system that learns TurKontrol’s POMDP parameters from Mechanical Turk data to optimize iterative crowdsourced tasks?",
                "query_meta": {
                    "type": "original"
                },
                "top_k": 50,
                "hits": [
                    {
                        "rank": 1,
                        "score": 0.8459355235099792,
                        "doc_id": "NART120023140",
                        "title": "Artificial Intelligence for Artificial Artificial Intelligence",
                        "abstract": "<P> Crowdsourcing platforms such as Amazon Mechanical Turk have become popular for a wide variety of human intelligence tasks; however, quality control continues to be a significant challenge. Recently, we propose TurKontrol, a theoretical model based on POMDPs to optimize iterative, crowd-sourced workflows. However, they neither describe how to learn the model parameters, nor show its effectiveness in a real crowd-sourced setting. Learning is challenging due to the scale of the model and noisy data: there are hundreds of thousands of workers with high-variance abilities. This paper presents an end-to-end system that first learns TurKontrol's POMDP parameters from real Mechanical Turk data, and then applies the model to dynamically optimize live tasks. We validate the model and use it to control a successive-improvement process on Mechanical Turk. By modeling worker accuracy and voting patterns, our system produces significantly superior artifacts compared to those generated through nonadaptive workflows using the same amount of money. </P>",
                        "source": "http://click.ndsl.kr/servlet/OpenAPIDetailView?keyValue=NART120023140&target=NART&cn=NART120023140",
                        "author": "nan",
                        "embedding_mode": "3*title+abstract",
                        "embedding_text": "Artificial Intelligence for Artificial Artificial Intelligence Artificial Intelligence for Artificial Artificial Intelligence Artificial Intelligence for Artificial Artificial Intelligence <P> Crowdsourcing platforms such as Amazon Mechanical Turk have become popular for a wide variety of human intelligence tasks; however, quality control continues to be a significant challenge. Recently, we propose TurKontrol, a theoretical model based on POMDPs to optimize iterative, crowd-sourced workflows. However, they neither describe how to learn the model parameters, nor show its effectiveness in a real crowd-sourced setting. Learning is challenging due to the scale of the model and noisy data: there are hundreds of thousands of workers with high-variance abilities. This paper presents an end-to-end system that first learns TurKontrol's POMDP parameters from real Mechanical Turk data, and then applies the model to dynamically optimize live tasks. We validate the model and use it to control a successive-improvement process on Mechanical Turk. By modeling worker accuracy and voting patterns, our system produces significantly superior artifacts compared to those generated through nonadaptive workflows using the same amount of money. </P>"
                    }
                ]
            },
            {
                "query": "What approach does the system use to learn TurKontrol’s POMDP parameters from Mechanical Turk data to optimize iterative crowdsourced tasks?",
                "query_meta": {
                    "type": "single_hop",
                    "index": 0
                },
                "top_k": 50,
                "hits": [
                    {
                        "rank": 1,
                        "score": 0.8365156650543213,
                        "doc_id": "NART120023140",
                        "title": "Artificial Intelligence for Artificial Artificial Intelligence",
                        "abstract": "<P> Crowdsourcing platforms such as Amazon Mechanical Turk have become popular for a wide variety of human intelligence tasks; however, quality control continues to be a significant challenge. Recently, we propose TurKontrol, a theoretical model based on POMDPs to optimize iterative, crowd-sourced workflows. However, they neither describe how to learn the model parameters, nor show its effectiveness in a real crowd-sourced setting. Learning is challenging due to the scale of the model and noisy data: there are hundreds of thousands of workers with high-variance abilities. This paper presents an end-to-end system that first learns TurKontrol's POMDP parameters from real Mechanical Turk data, and then applies the model to dynamically optimize live tasks. We validate the model and use it to control a successive-improvement process on Mechanical Turk. By modeling worker accuracy and voting patterns, our system produces significantly superior artifacts compared to those generated through nonadaptive workflows using the same amount of money. </P>",
                        "source": "http://click.ndsl.kr/servlet/OpenAPIDetailView?keyValue=NART120023140&target=NART&cn=NART120023140",
                        "author": "nan",
                        "embedding_mode": "3*title+abstract",
                        "embedding_text": "Artificial Intelligence for Artificial Artificial Intelligence Artificial Intelligence for Artificial Artificial Intelligence Artificial Intelligence for Artificial Artificial Intelligence <P> Crowdsourcing platforms such as Amazon Mechanical Turk have become popular for a wide variety of human intelligence tasks; however, quality control continues to be a significant challenge. Recently, we propose TurKontrol, a theoretical model based on POMDPs to optimize iterative, crowd-sourced workflows. However, they neither describe how to learn the model parameters, nor show its effectiveness in a real crowd-sourced setting. Learning is challenging due to the scale of the model and noisy data: there are hundreds of thousands of workers with high-variance abilities. This paper presents an end-to-end system that first learns TurKontrol's POMDP parameters from real Mechanical Turk data, and then applies the model to dynamically optimize live tasks. We validate the model and use it to control a successive-improvement process on Mechanical Turk. By modeling worker accuracy and voting patterns, our system produces significantly superior artifacts compared to those generated through nonadaptive workflows using the same amount of money. </P>"
                    }
                ]
            },
            {
                "query": "What results characterize the system that learns TurKontrol’s POMDP parameters from Mechanical Turk data to optimize iterative crowdsourced tasks?",
                "query_meta": {
                    "type": "single_hop",
                    "index": 1
                },
                "top_k": 50,
                "hits": [
                    {
                        "rank": 1,
                        "score": 0.8467158079147339,
                        "doc_id": "NART120023140",
                        "title": "Artificial Intelligence for Artificial Artificial Intelligence",
                        "abstract": "<P> Crowdsourcing platforms such as Amazon Mechanical Turk have become popular for a wide variety of human intelligence tasks; however, quality control continues to be a significant challenge. Recently, we propose TurKontrol, a theoretical model based on POMDPs to optimize iterative, crowd-sourced workflows. However, they neither describe how to learn the model parameters, nor show its effectiveness in a real crowd-sourced setting. Learning is challenging due to the scale of the model and noisy data: there are hundreds of thousands of workers with high-variance abilities. This paper presents an end-to-end system that first learns TurKontrol's POMDP parameters from real Mechanical Turk data, and then applies the model to dynamically optimize live tasks. We validate the model and use it to control a successive-improvement process on Mechanical Turk. By modeling worker accuracy and voting patterns, our system produces significantly superior artifacts compared to those generated through nonadaptive workflows using the same amount of money. </P>",
                        "source": "http://click.ndsl.kr/servlet/OpenAPIDetailView?keyValue=NART120023140&target=NART&cn=NART120023140",
                        "author": "nan",
                        "embedding_mode": "3*title+abstract",
                        "embedding_text": "Artificial Intelligence for Artificial Artificial Intelligence Artificial Intelligence for Artificial Artificial Intelligence Artificial Intelligence for Artificial Artificial Intelligence <P> Crowdsourcing platforms such as Amazon Mechanical Turk have become popular for a wide variety of human intelligence tasks; however, quality control continues to be a significant challenge. Recently, we propose TurKontrol, a theoretical model based on POMDPs to optimize iterative, crowd-sourced workflows. However, they neither describe how to learn the model parameters, nor show its effectiveness in a real crowd-sourced setting. Learning is challenging due to the scale of the model and noisy data: there are hundreds of thousands of workers with high-variance abilities. This paper presents an end-to-end system that first learns TurKontrol's POMDP parameters from real Mechanical Turk data, and then applies the model to dynamically optimize live tasks. We validate the model and use it to control a successive-improvement process on Mechanical Turk. By modeling worker accuracy and voting patterns, our system produces significantly superior artifacts compared to those generated through nonadaptive workflows using the same amount of money. </P>"
                    }
                ]
            }
        ],
        "meta": {
            "model": "gemini-2.5-flash",
            "temperature": 0.2
        }
    }
}